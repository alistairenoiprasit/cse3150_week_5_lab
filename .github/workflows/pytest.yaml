# ChatGPT generated automation code built from docs.

name: Run Tests

on:
  pull_request:   # Run tests on every PR
    branches:
      - main
      - develop   # adjust as needed
  push:
    branches:
      - '**'      # Run on all branches

jobs:
  cpp-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install C++ tools
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ clang cppcheck

      - name: Find C++ files
        id: find-cpp
        run: |
          CPP_FILES=$(find . -name "*.cpp" -type f | tr '\n' ' ')
          echo "Found C++ files: $CPP_FILES"
          echo "cpp_files=$CPP_FILES" >> $GITHUB_OUTPUT
          if [ -z "$CPP_FILES" ]; then
            echo "No C++ files found, skipping C++ checks"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Compile with strict g++ flags
        if: steps.find-cpp.outputs.skip != 'true'
        run: |
          echo "Building with g++ (strict mode)..."
          CPP_FILES="${{ steps.find-cpp.outputs.cpp_files }}"
          g++ -std=c++17 -Wall -Wextra -pedantic \
              -fsanitize=address -fsanitize=undefined \
              -g $CPP_FILES -o test_build_gcc
          echo "✓ g++ build passed"

      - name: Check for extra warnings (non-blocking)
        if: steps.find-cpp.outputs.skip != 'true'
        continue-on-error: true
        run: |
          echo "Checking for additional warnings (won't fail build)..."
          CPP_FILES="${{ steps.find-cpp.outputs.cpp_files }}"
          g++ -std=c++17 -Wall -Wextra -Werror -pedantic \
              -Wshadow -Wconversion -Wunused -Wold-style-cast \
              -fsanitize=address -fsanitize=undefined \
              -g $CPP_FILES -o test_extra_warnings 2>&1 | tee warnings.log || true
          
          if [ -s warnings.log ]; then
            echo "⚠️  Additional warnings found (review recommended):"
            cat warnings.log
          else
            echo "✓ No additional warnings"
          fi

      - name: Compile with clang++ (catches different issues)
        if: steps.find-cpp.outputs.skip != 'true'
        run: |
          echo "Building with clang++..."
          CPP_FILES="${{ steps.find-cpp.outputs.cpp_files }}"
          clang++ -std=c++17 -Wall -Wextra -pedantic \
                  -fsanitize=address -fsanitize=undefined \
                  -g $CPP_FILES -o test_build_clang
          echo "✓ clang++ build passed"

      - name: Run cppcheck static analysis
        if: steps.find-cpp.outputs.skip != 'true'
        run: |
          echo "Running cppcheck..."
          CPP_FILES="${{ steps.find-cpp.outputs.cpp_files }}"
          cppcheck --enable=warning,style,performance,portability \
                   --error-exitcode=1 \
                   --suppress=missingIncludeSystem \
                   --std=c++17 \
                   $CPP_FILES
          echo "✓ cppcheck passed"

  python-test:
    runs-on: ubuntu-latest
    needs: cpp-build  # Only run Python tests if C++ builds successfully

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"   # choose your version

      - name: Install C++ compiler for pytest
        run: |
          sudo apt-get update
          sudo apt-get install -y g++

      - name: Show repo files
        run: ls -R

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: pytest